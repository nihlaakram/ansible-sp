# Copyright 2019 WSO2, Inc. (http://wso2.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License
# -------------------------------------------------------------------------
# command line arguments
params:
  existing_version: 4.3.0
  new_version: 4.4.0
  existing_installer_deb: wso2sp-linux-installer-x64-4.3.0.deb
  new_installer_deb: wso2sp-linux-installer-x64-4.4.0.deb
  existing_installer_rpm: wso2sp-linux-installer-x64-4.3.0.rpm
  new_installer_rpm: wso2sp-linux-installer-x64-4.3.0.rpm
  wso2sp: "wso2sp-4.4.0"
# files based configurations
files:
# Readme.md
  - file_path: "README.md"
    relative_path: ~
    file_type: "txt"
    configurations:
      - operation: "replace"
        current_value: "{$arg.existing_installer_deb}"
        new_value: "{$arg.new_installer_deb}"
      - operation: "replace"
        current_value: "{$arg.existing_version}"
        new_value: "{$arg.new_version}"
# dev/group_vars/sp.yml
  - file_path: "dev/group_vars/sp.yml"
    relative_path: ~
    file_type: "txt"
    configurations:
      - operation: "replace"
        current_value: "{$arg.existing_installer_deb}"
        new_value: "{$arg.new_installer_deb}"
      - operation: "replace"
        current_value: "{$arg.existing_version}"
        new_value: "{$arg.new_version}"
      - operation: "replace"
        current_value: "{$arg.existing_installer_rpm}"
        new_value: "{$arg.new_installer_rpm}"
# dev/group_vars/sp.yml
  - file_path: "roles/common/tasks/main.yml"
    relative_path: ~
    file_type: "txt"
    configurations:
      - operation: "replace"
        current_value: "{$arg.existing_version}"
        new_value: "{$arg.new_version}"
# roles/dashboard/
  - file_path: roles/dashboard/templates/carbon-home/bin/dashboard.sh.j2
    relative_path: "{$arg.wso2sp}/bin/dashboard.sh"
    file_type: sh
    configurations:
      - operation: "add"
        xpath: "cygwin=false;"
        value: "export JAVA_HOME={{ java_home }}; \n"
  - file_path: roles/dashboard/templates/carbon-home/conf/dashboard/deployment.yaml.j2
    relative_path: "{$arg.wso2sp}/conf/dashboard/deployment.yaml"
    file_type: yaml
    configurations:
      - operation: "replace"
        xpath: "wso2.carbon/id"
        value: "{{ server_id }}"
      - operation: "replace"
        xpath: "wso2.carbon/offset"
        value: "{{ ports_offset }}"
      - operation: "replace"
        xpath: "databridge.config/workerThreads"
        value: "{{ worker_threads }}"
      - operation: "replace"
        xpath: "databridge.config/keyStoreLocation"
        value: "{{ databridge_config_keystore_location }}"
      - operation: "replace"
        xpath: "databridge.config/keyStorePassword"
        value: "{{ databridge_config_keystore_password }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/tcpPort"
        value: "{{ thrift_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/sslPort"
        value: "{{ thrift_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/tcpPort"
        value: "{{ binary_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/sslPort"
        value: "{{ binary_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/hostName"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "state.persistence/enabled"
        value: "{{ state_persistence_enabled }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/privateKeyAlias"
        value: "{{ secure_vault_private_key_alias }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/keystoreLocation"
        value: "{{ secure_vault_keystore_location }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/secretPropertiesFile"
        value: "{{ secure_vault_secret_properties_file }}"
      - operation: "replace"
        xpath: "wso2.securevault/masterKeyReader/parameters/masterKeyReaderFile"
        value: "{{ secure_vault_master_key_reader_file }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_DASHBOARD_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_dashboard_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_DASHBOARD_DB\"]/definition/configuration/username"
        value: "{{ wso2_dashboard_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_DASHBOARD_DB\"]/definition/configuration/password"
        value: "{{ wso2_dashboard_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_DASHBOARD_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_dashboard_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"BUSINESS_RULES_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ business_rules_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"BUSINESS_RULES_DB\"]/definition/configuration/username"
        value: "{{ business_rules_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"BUSINESS_RULES_DB\"]/definition/configuration/password"
        value: "{{ business_rules_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"BUSINESS_RULES_DB\"]/definition/configuration/driverClassName"
        value: "{{ business_rules_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_STATUS_DASHBOARD_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_status_dashboard_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_STATUS_DASHBOARD_DB\"]/definition/configuration/username"
        value: "{{ wso2_status_dashboard_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_STATUS_DASHBOARD_DB\"]/definition/configuration/password"
        value: "{{ wso2_status_dashboard_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_STATUS_DASHBOARD_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_status_dashboard_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_metrics_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/username"
        value: "{{ wso2_metrics_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/password"
        value: "{{ wso2_metrics_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_metrics_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_permissions_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/username"
        value: "{{ wso2_permissions_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/password"
        value: "{{ wso2_permissions_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_permissions_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ message_tracing_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/username"
        value: "{{ message_tracing_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/password"
        value: "{{ message_tracing_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/driverClassName"
        value: "{{ message_tracing_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default-https\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default-https\"]/port"
        value: "{{ default_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default-https\"]/keyStoreFile"
        value: "{{ listener_configurations_keystore_file }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default-https\"]/keyStorePassword"
        value: "{{ listener_configurations_password }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default-https\"]/certPass"
        value: "{{ listener_configurations_cert_password }}"
# roles/editor/
  - file_path: roles/editor/templates/carbon-home/bin/editor.sh.j2
    relative_path: "{$arg.wso2sp}/bin/editor.sh"
    file_type: sh
    configurations:
      - operation: "add"
        xpath: "cygwin=false;"
        value: "export JAVA_HOME={{ java_home }}; \n"
  - file_path: roles/editor/templates/carbon-home/conf/editor/deployment.yaml.j2
    relative_path: "{$arg.wso2sp}/conf/editor/deployment.yaml"
    file_type: yaml
    configurations:
      - operation: "replace"
        xpath: "wso2.carbon/id"
        value: "{{ server_id }}"
      - operation: "replace"
        xpath: "wso2.carbon/offset"
        value: "{{ ports_offset }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/port"
        value: "{{ default_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/port"
        value: "{{ msf4j_https_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStoreFile"
        value: "{{ listener_configurations_keystore_file }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStorePassword"
        value: "{{ listener_configurations_keystore_password }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/certPass"
        value: "{{ listener_configurations_keystore_cert_password }}"
      - operation: "replace"
        xpath: "siddhi.stores.query.api/listenerConfigurations[id=\"default\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "siddhi.stores.query.api/listenerConfigurations[id=\"default\"]/port"
        value: "{{ siddhi_stores_query_api_listener_configurations_default_port }}"
      - operation: "replace"
        xpath: "databridge.config/workerThreads"
        value: "{{ worker_threads }}"
      - operation: "replace"
        xpath: "databridge.config/keyStoreLocation"
        value: "{{ databridge_config_keystore_location }}"
      - operation: "replace"
        xpath: "databridge.config/keyStorePassword"
        value: "{{ databridge_config_keystore_password }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/tcpPort"
        value: "{{ thrift_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/sslPort"
        value: "{{ thrift_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/tcpPort"
        value: "{{ binary_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/sslPort"
        value: "{{ binary_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/hostName"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/privateKeyAlias"
        value: "{{ secure_vault_private_key_alias }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/keystoreLocation"
        value: "{{ secure_vault_keystore_location }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/secretPropertiesFile"
        value: "{{ secure_vault_secret_properties_file }}"
      - operation: "replace"
        xpath: "wso2.securevault/masterKeyReader/parameters/masterKeyReaderFile"
        value: "{{ secure_vault_master_key_reader_file }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ message_tracing_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/username"
        value: "{{ message_tracing_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/password"
        value: "{{ message_tracing_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/driverClassName"
        value: "{{ message_tracing_db_driver_class_name }}"
      - operation: "replace"
        xpath: "cluster.config/enabled"
        value: "{{ cluster_config_enabled }}"
# roles/manager/
  - file_path: roles/manager/templates/carbon-home/bin/manager.sh.j2
    relative_path: "{$arg.wso2sp}/bin/manager.sh"
    file_type: sh
    configurations:
      - operation: "add"
        xpath: "cygwin=false;"
        value: "export JAVA_HOME={{ java_home }}; \n"
  - file_path: roles/manager/templates/carbon-home/conf/manager/deployment.yaml.j2
    relative_path: "{$arg.wso2sp}/conf/manager/deployment.yaml"
    file_type: yaml
    configurations:
      - operation: "replace"
        xpath: "wso2.carbon/id"
        value: "{{ server_id }}"
      - operation: "replace"
        xpath: "wso2.carbon/offset"
        value: "{{ ports_offset }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/port"
        value: "{{ default_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/port"
        value: "{{ msf4j_https_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStoreFile"
        value: "{{ listener_configurations_keystore_file }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStorePassword"
        value: "{{ listener_configurations_keystore_password }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/certPass"
        value: "{{ listener_configurations_keystore_cert_password }}"
      - operation: "replace"
        xpath: "databridge.config/workerThreads"
        value: "{{ worker_threads }}"
      - operation: "replace"
        xpath: "databridge.config/keyStoreLocation"
        value: "{{ databridge_config_keystore_location }}"
      - operation: "replace"
        xpath: "databridge.config/keyStorePassword"
        value: "{{ databridge_config_keystore_password }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/tcpPort"
        value: "{{ thrift_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/sslPort"
        value: "{{ thrift_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/tcpPort"
        value: "{{ binary_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/sslPort"
        value: "{{ binary_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/hostName"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/privateKeyAlias"
        value: "{{ secure_vault_private_key_alias }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/keystoreLocation"
        value: "{{ secure_vault_keystore_location }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/secretPropertiesFile"
        value: "{{ secure_vault_secret_properties_file }}"
      - operation: "replace"
        xpath: "wso2.securevault/masterKeyReader/parameters/masterKeyReaderFile"
        value: "{{ secure_vault_master_key_reader_file }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"SP_MGT_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ sp_mgt_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"SP_MGT_DB\"]/definition/configuration/username"
        value: "{{ sp_mgt_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"SP_MGT_DB\"]/definition/configuration/password"
        value: "{{ sp_mgt_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"SP_MGT_DB\"]/definition/configuration/driverClassName"
        value: "{{ sp_mgt_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_permissions_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/username"
        value: "{{ wso2_permissions_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/password"
        value: "{{ wso2_permissions_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_permissions_db_driver_class_name }}"
      - operation: "replace"
        xpath: "deployment.config/httpsInterface/host"
        value: "{{ deployment_config_http_interface_host }}"
      - operation: "replace"
        xpath: "deployment.config/httpsInterface/port"
        value: "{{ deployment_config_http_interface_port }}"
      - operation: "replace"
        xpath: "deployment.config/datasource"
        value: "{{ deployment_config_datasource }}"
      - operation: "replace"
        xpath: "deployment.config/minResourceCount"
        value: "{{ deployment_config_min_resource_count }}"
      - operation: "replace"
        xpath: "deployment.config/bootstrapURLs"
        value: "{{ deployment_config_bootstrap_url }}"
      - operation: "replace"
        xpath: "deployment.config/zooKeeperConfig/zooKeeperURLs"
        value: "{{ deployment_config_zookeeper_urls }}"
# roles/worker/
  - file_path: roles/worker/templates/carbon-home/bin/worker.sh.j2
    relative_path: "{$arg.wso2sp}/bin/worker.sh"
    file_type: sh
    configurations:
      - operation: "add"
        xpath: "cygwin=false;"
        value: "export JAVA_HOME={{ java_home }}; \n"
  - file_path: roles/worker/templates/carbon-home/conf/worker/deployment.yaml.j2
    relative_path: "{$arg.wso2sp}/conf/worker/deployment.yaml"
    file_type: yaml
    configurations:
      - operation: "replace"
        xpath: "wso2.carbon/id"
        value: "{{ server_id }}"
      - operation: "replace"
        xpath: "wso2.carbon/offset"
        value: "{{ ports_offset }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"default\"]/port"
        value: "{{ default_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/port"
        value: "{{ msf4j_https_port }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStoreFile"
        value: "{{ listener_configurations_keystore_file }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/keyStorePassword"
        value: "{{ listener_configurations_keystore_password }}"
      - operation: "replace"
        xpath: "wso2.transport.http/listenerConfigurations[id=\"msf4j-https\"]/certPass"
        value: "{{ listener_configurations_keystore_cert_password }}"
      - operation: "replace"
        xpath: "siddhi.stores.query.api/listenerConfigurations[id=\"default\"]/host"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "siddhi.stores.query.api/listenerConfigurations[id=\"default\"]/port"
        value: "{{ siddhi_stores_query_api_listener_configurations_default_port }}"
      - operation: "replace"
        xpath: "databridge.config/workerThreads"
        value: "{{ worker_threads }}"
      - operation: "replace"
        xpath: "databridge.config/keyStoreLocation"
        value: "{{ databridge_config_keystore_location }}"
      - operation: "replace"
        xpath: "databridge.config/keyStorePassword"
        value: "{{ databridge_config_keystore_password }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/tcpPort"
        value: "{{ thrift_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Thrift\"]/properties/sslPort"
        value: "{{ thrift_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/tcpPort"
        value: "{{ binary_data_receiver_tcp_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/sslPort"
        value: "{{ binary_data_receiver_ssl_port }}"
      - operation: "replace"
        xpath: "databridge.config/dataReceivers/dataReceiver[type=\"Binary\"]/properties/hostName"
        value: "{{ hostname }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Thrift\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePath"
        value: "{{ truststore_path }}"
      - operation: "replace"
        xpath: "data.agent.config/agents/agentConfiguration[name=\"Binary\"]/trustStorePassword"
        value: "{{ truststore_password }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/privateKeyAlias"
        value: "{{ secure_vault_private_key_alias }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/keystoreLocation"
        value: "{{ secure_vault_keystore_location }}"
      - operation: "replace"
        xpath: "wso2.securevault/secretRepository/parameters/secretPropertiesFile"
        value: "{{ secure_vault_secret_properties_file }}"
      - operation: "replace"
        xpath: "wso2.securevault/masterKeyReader/parameters/masterKeyReaderFile"
        value: "{{ secure_vault_master_key_reader_file }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_metrics_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/username"
        value: "{{ wso2_metrics_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/password"
        value: "{{ wso2_metrics_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_METRICS_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_metrics_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ wso2_permissions_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/username"
        value: "{{ wso2_permissions_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/password"
        value: "{{ wso2_permissions_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"WSO2_PERMISSIONS_DB\"]/definition/configuration/driverClassName"
        value: "{{ wso2_permissions_db_driver_class_name }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/jdbcUrl"
        value: "{{ message_tracing_db_url }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/username"
        value: "{{ message_tracing_db_username }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/password"
        value: "{{ message_tracing_db_password }}"
      - operation: "replace"
        xpath: "wso2.datasources/dataSources[name=\"Message_Tracing_DB\"]/definition/configuration/driverClassName"
        value: "{{ message_tracing_db_driver_class_name }}"
      - operation: "replace"
        xpath: "cluster.config/enabled"
        value: "{{ cluster_config_enabled }}"
